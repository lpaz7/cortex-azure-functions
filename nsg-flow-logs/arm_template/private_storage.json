{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "uniqueName": {
            "type": "string",
            "defaultValue": ""
        },
        "cortexAccessToken": {
            "type": "string",
            "metadata": {
                "description": "Cortex HTTP authorization key"
            }
        },
        "targetStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Azure Storage Account that you want to capture the log blobs from."
            },
            "minLength": 3,
            "maxLength": 24
        },
        "targetContainerName": {
            "type": "string",
            "defaultValue": "insights-logs-networksecuritygroupflowevent",
            "metadata": {
                "description": "Name of the container that contains the logs you want to forward."
            },
            "minLength": 3,
            "maxLength": 63
        },
        "location": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Region where all resources included in this template will be deployed. Leave this blank to use the same region as the one of the resource group."
            }
        },
        "cortexHttpEndpoint": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Cortex HTTP endpoint"
            }
        },
        "remotePackage": {
            "type": "string",
            "defaultValue": "https://github.com/PaloAltoNetworks/cortex-azure-functions/releases/download/nsg-flow-logs-1.0.0-beta.1/nsg-flow-logs.zip",
            "metadata": {
                "description": "Remote package ZIP file URL"
            }
        }
    },
    "variables": {
        "targetStorageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('targetStorageAccountName'))]",
        "onePerResourceGroupUniqueSuffix": "[uniqueString(resourceGroup().id)]",
        "onePerResourceGroupAndStorageAccountAndContainer": "[uniqueString(resourceGroup().id, parameters('targetStorageAccountName'), parameters('targetContainerName'))]",
        "functionAppName": "[format('cortex-nfl-{0}-{1}', parameters('uniqueName'), variables('onePerResourceGroupAndStorageAccountAndContainer'))]",
        "location": "[if(equals(parameters('location'), ''), resourceGroup().location, parameters('location'))]",
        "internalStorageAccountName": "[format('cortex{0}', variables('onePerResourceGroupAndStorageAccountAndContainer'))]",

        "servicePlanName": "[concat('cortex-dedicated', variables('onePerResourceGroupUniqueSuffix'))]",

        "virtualNetworkName": "[format('cortex{0}-virtual-network', variables('onePerResourceGroupUniqueSuffix'))]",
        "functionSubnetName": "[format('{0}-internal-functions-subnet', variables('virtualNetworkName'))]",
        "privateEndpointsSubnetName": "[format('{0}-private-endpoints-subnet', variables('virtualNetworkName'))]",

        "dnsSuffix": "[environment().suffixes.storage]",

        "privateEndpointStorageFileName": "[format('{0}-file-private-endpoint', variables('internalStorageAccountName'))]",
        "privateEndpointStorageBlobName": "[format('{0}-blob-private-endpoint', variables('internalStorageAccountName'))]",
        "privateEndpointStorageQueueName": "[format('{0}-queue-private-endpoint', variables('internalStorageAccountName'))]",
        "privateEndpointStorageTableName": "[format('{0}-table-private-endpoint', variables('internalStorageAccountName'))]",

        "functionNetworkConfigName": "[format('{0}/{1}', variables('functionAppName'), 'virtualNetwork')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2022-09-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('functionSubnetName')]",
                        "properties": {
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled",
                            "delegations": [
                                {
                                    "name": "webapp",
                                    "properties": {
                                        "serviceName": "Microsoft.Web/serverFarms"
                                    }
                                }
                            ],
                            "addressPrefix": "10.2.0.0/24"
                        }
                    },
                    {
                        "name": "[variables('privateEndpointsSubnetName')]",
                        "properties": {
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled",
                            "addressPrefix": "10.2.1.0/24"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2022-05-01",
            "name": "[variables('privateEndpointStorageFileName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('internalStorageAccountName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('privateEndpointsSubnetName'))]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "MyStorageFilePrivateLinkConnection",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('internalStorageAccountName'))]",
                            "groupIds": [
                                "file"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2022-05-01",
            "name": "[variables('privateEndpointStorageBlobName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('internalStorageAccountName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('privateEndpointsSubnetName'))]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "MyStorageBlobPrivateLinkConnection",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('internalStorageAccountName'))]",
                            "groupIds": [
                                "blob"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2022-05-01",
            "name": "[variables('privateEndpointStorageQueueName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('internalStorageAccountName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('privateEndpointsSubnetName'))]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "MyStorageQueuePrivateLinkConnection",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('internalStorageAccountName'))]",
                            "groupIds": [
                                "queue"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2022-05-01",
            "name": "[variables('privateEndpointStorageTableName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('internalStorageAccountName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('privateEndpointsSubnetName'))]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "MyStorageTablePrivateLinkConnection",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('internalStorageAccountName'))]",
                            "groupIds": [
                                "table"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-04-01",
            "name": "[variables('internalStorageAccountName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "publicNetworkAccess": "Disabled",
                "allowBlobPublicAccess": false,
                "networkAcls": {"bypass": "AzureServices", "defaultAction": "Deny"}
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2022-09-01",
            "kind": "functionapp,linux",
            "location": "[variables('location')]",
            "name": "[variables('servicePlanName')]",
            "sku": "[json('{ \"name\":\"P0v3\", \"tier\": \"Premium\", \"capacity\": 1 }')]",
            "properties": "[json('{ \"reserved\": true, \"maximumElasticWorkerCount\": 1 }')]"
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-12-01",
            "name": "[variables('functionAppName')]",
            "location": "[variables('location')]",
            "kind": "functionapp,linux",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('internalStorageAccountName'))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('servicePlanName'))]",
                "[resourceId('Microsoft.Network/privateEndpoints/privateDnsZoneGroups', variables('privateEndpointStorageBlobName'), 'blobPrivateDnsZoneGroup')]",
                "[resourceId('Microsoft.Network/privateEndpoints/privateDnsZoneGroups', variables('privateEndpointStorageFileName'), 'filePrivateDnsZoneGroup')]",
                "[resourceId('Microsoft.Network/privateEndpoints/privateDnsZoneGroups', variables('privateEndpointStorageQueueName'), 'queuePrivateDnsZoneGroup')]",
                "[resourceId('Microsoft.Network/privateEndpoints/privateDnsZoneGroups', variables('privateEndpointStorageTableName'), 'tablePrivateDnsZoneGroup')]",
                "[resourceId('Microsoft.Network/privateDnsZones/virtualNetworkLinks', variables('privateStorageFileDnsZoneName'), format('{0}-link', variables('virtualNetworkName')))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('servicePlanName'))]",
                "siteConfig": {
                    "vnetRouteAllEnabled": true,
                    "linuxFxVersion": "PYTHON|3.11",
                    "appSettings": [
                        {
                            "name": "TargetAccountConnection",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('targetStorageAccountName'), ';AccountKey=', listKeys(variables('targetStorageAccountId'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "CONTAINER_NAME",
                            "value": "[parameters('targetContainerName')]"
                        },
                        {
                            "name": "CORTEX_ACCESS_TOKEN",
                            "value": "[parameters('cortexAccessToken')]"
                        },
                        {
                            "name": "CORTEX_HTTP_ENDPOINT",
                            "value": "[parameters('cortexHttpEndpoint')]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('internalStorageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('internalStorageAccountName')), '2021-04-01').keys[0].value,';EndpointSuffix=',environment().suffixes.storage)]"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "python"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "WEBSITE_RUN_FROM_PACKAGE",
                            "value": "[parameters('remotePackage')]"
                        }
                    ],
                    "alwaysOn": true,
                    "ftpsState": "Disabled"
                },
                "publicNetworkAccess": "Disabled",
                "httpsOnly": true
            }
        },
        {

            "type": "Microsoft.Web/sites/networkConfig",
            "apiVersion": "2022-03-01",
            "name": "[variables('functionNetworkConfigName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "subnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('functionSubnetName'))]",
                "swiftSupported": true
            }
        }
    ],
    "outputs": {}
}
